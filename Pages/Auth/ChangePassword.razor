@page "/change-password"
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components
@using DashboardApp.Models
@using DashboardApp.Services 
@inject AuthApiClient AuthApiClient

<h3>Login</h3>

<EditForm Model="changePasswordModel" OnValidSubmit="HandleChangePassword">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="CurrentPassword">Current Password</label>
        <InputText id="CurrentPassword" class="form-control" @bind-Value="changePasswordModel.CurrentPassword" />
    </div>
    <div class="form-group">
        <label for="NewPassword">New Password</label>
        <InputText type="NewPassword" id="NewPassword" class="form-control" @bind-Value="changePasswordModel.NewPassword" />
    </div>
    <div class="form-group">
        <label for="ConfirmNewPassword">Confirm New  Password</label>
        <InputText type="ConfirmNewPassword" id="ConfirmNewPassword" class="form-control" @bind-Value="changePasswordModel.ConfirmNewPassword" />
    </div>
    <button type="submit" class="btn btn-primary">Confirm</button>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }

</EditForm>

@code {
    private ChangePasswordModel changePasswordModel = new ChangePasswordModel();
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await AuthApiClient.InitializeClientIdAsync();
        }
        catch (UnauthorizedAccessException)
        {
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }


    private async Task HandleChangePassword()
    {
        try
        {
            var response = await AuthApiClient.ChangePasswordAsync(changePasswordModel);
            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/");
            }   
            errorMessage = "Confirm Password is wrong";
        }
        catch (Exception ex)
        {
            errorMessage = "Invalid loading credentials";
        }
        
    }

}
