@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        <div class="dropdown">
            <button class="btn btn-link dropdown-toggle" type="button" id="userMenu" data-bs-toggle="dropdown" aria-expanded="false">
                Admin
            </button>
            <ul class="dropdown-menu" aria-labelledby="userMenu">
                <li><button class="dropdown-item" @onclick="ChangePassword">Change Password</button></li>
                <li><hr class="dropdown-divider"></li>
                <li><button class="dropdown-item text-danger" @onclick="Logout">Logout</button></li>
            </ul>
        </div>
    </div>


    <div class="content px-4">
        @Body
    </div>
</div>

@code {
    private async Task Logout()
    {
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "Token");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "Username");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "ClientId");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "UserMenus");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "CanCreate");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "CanView");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "CanUpdate");
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "CanDelete");

        Navigation.NavigateTo("/login", true);
    }

    private async Task ChangePassword()
    {
        Navigation.NavigateTo("/change-password");
    }
}
